{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Jquery.expandy","body":"# jquery.Expandy plugin\r\n\r\nLets you turn a list (or a div with things in it) into an expandable quasi-carousel.\r\n\r\n## Basic example\r\n\r\n### HTML\r\n\r\nI'd usually use an unordered list, but i guess this should work just as well with a div with a load of divs inside it too.\r\n\r\n```html\r\n<ul class=\"cf\" id=\"expandy\">\r\n\t<li>\r\n\t\t<a href=\"http://www.google.co.uk\">\r\n\t\t\t<h2>Google</h2>\r\n\t\t</a>\r\n\t</li>\r\n\t<li>\r\n\t\t<a href=\"http://www.bing.co.uk\">\r\n\t\t\t<h2>Bing</h2>\r\n\t\t</a>\r\n\t</li>\r\n\t<li>\r\n\t\t<a href=\"http://www.yahoo.co.uk\">\r\n\t\t\t<h2>Yahoo</h2>\r\n\t\t</a>\r\n\t</li>\r\n\t<li>\r\n\t\t<a href=\"http://www.duckduckgo.com\">\r\n\t\t\t<h2>Duck Duck Go</h2>\r\n\t\t</a>\r\n\t</li>\r\n\t<li>\r\n\t\t<a href=\"http://www.lmgtfy.com\">\r\n\t\t\t<h2>Let Me Google That For you</h2>\r\n\t\t</a>\r\n\t</li>\r\n\t<li>\r\n\t\t<a href=\"http://www.github.com\">\r\n\t\t\t<h2>GitHub</h2>\r\n\t\t</a>\r\n\t</li>\r\n</ul>\r\n```\r\n\r\n### CSS\r\n\r\nChuck a bit of CSS in there.\r\n\r\nThe important parts are to ensure that the container has a set width and height, and that overflow is set to hidden for both the container and each list item (see the demo for the text hiding off-edge).\r\n\r\n```css\r\n#expandy {\r\n\tlist-style: none;\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tposition: relative;\r\n\toverflow: hidden;\r\n\twidth: 1000px;\r\n\theight: 240px;\r\n}\r\n\t\r\n#expandy li {\r\n\tfloat: left;\r\n\tposition: relative;\r\n\tmargin: 0;\r\n\twidth: 100px;\r\n\theight: 240px;\r\n\toverflow: hidden;\r\n\tcursor: pointer;\r\n}\r\n\t\r\n#expandy li a {\r\n\tdisplay: block;\r\n\tcolor: #fff;\r\n\ttext-decoration: none;\r\n\theight: 240px;\r\n\tposition: relative;\r\n}\r\n\t\r\n\t\r\n#expandy li h2 {\r\n\tfont-size: 14px;\r\n\tmargin: 0;\r\n\twidth: 800px;\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n\tbottom: 30px;\r\n\tleft: 30px;\r\n}\r\n\t\r\n#expandy li p {\r\n\twidth: 800px;\r\n\tfont-size: 14px;\r\n\tmargin: 0;\r\n\tposition: absolute;\r\n\ttop: 30px;\r\n\tleft: 30px;\r\n}\r\n\r\n/*clearfix for fixing clears*/\r\n\r\n.cf:before, .cf:after { content: \"\"; display: table; }\r\n.cf:after { clear: both; }\r\n.cf { *zoom: 1; }\r\n```\r\n\r\n### jQuery\r\n\r\nMake sure you have called jQuery, pulled in the expandy js file (and easing if you want those effects too) before you try to run expandy:\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"http://cachedcommons.org/cache/jquery-easing/1.3.0/javascripts/jquery-easing-min.js\"></script>\r\n<script type=\"text/javascript\" src=\"/path/to/js/jquery.Expandy.js\"></script>\r\n```\r\n\r\nCall expandy to run. This doesn't have to be $(window).load, it could be $(document).ready if that makes you happy. $(window).load is better if you're waiting for images and so forth to finish loading before you invoke expandy to start.\r\n\r\n```javascript\r\n$(window).load(function() {\r\n\t$('#expandy').expandy({\r\n\t\t'animationDuration' : 250,\r\n\t\t'slideEasing'\t\t: 'easeOutBounce',\r\n\t\t'textSizeEasing'\t: 'easeInOutExpo',\r\n\t\t'fontSizeSmall'\t\t: '14px',\r\n\t\t'fontSizeLarge'\t\t: '30px',\r\n\t\t'compressedSize'\t: '100px',\r\n\t\t'expandedSize'\t\t: '500px',\r\n\t\t'firstOpen'\t\t\t: 0\r\n\t});\r\n});\r\n```\r\n\r\nThe full list of configurable settings (and the defaults) are as follows:\r\n\r\n```javascript\r\n'slideElement' \t\t\t: 'li',\t\t\t//the elements under the container that will be expandable\r\n'animationDuration' \t: 500,\t\t\t//milliseconds - currently applied to both text and box resizing\r\n'slideEasing'\t\t\t: 'swing',\t\t//default options are swing or linear\r\n'textSizeEasing'\t\t: 'swing',\t\t//include easing plugin for more options (see demo)\r\n'compressedSize'\t\t: '164px',\t\t//size of boxes when small\r\n'expandedSize'\t\t\t: '500px',\t\t//size of the \"expandy\"\r\n'fontSizeLarge'\t\t\t: '60px',\t\t//size for font when expanded\r\n'fontSizeSmall'\t\t\t: '20px',\t\t//size for font when small again (this should really match the size you've set in the css!)\r\n'firstOpen'\t\t\t\t: 0,\t\t\t//eq starts from zero, not one. which box should be opened first automatically\r\n'textElement'\t\t\t: 'h2'\t\t\t//which element to apply the text resizing on\r\n```\r\n\r\nThe default settings are based on the container for the expandy being 1000px wide and containing 4 child items. You'll need to adjust accordingly depending on how many expandy boxes you want.\r\n\r\n## Browsers\r\n\r\nI've tested and seen this working on Chrome, Safari, Opera, and Firefox on Mac OSX. It should work fine in Internet Explorer 6 (maybe?) onwards. Further testing to be done when I decide I really want to open that browser to do the testing!\r\n","google":"","tagline":"A jQuery plugin for expandable quasi-carousel-ness"}